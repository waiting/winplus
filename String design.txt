StringT设计要求
===============

1. 兼容std::string常用方法c_str(), append(), assign(), length(), size(), resize().

2. 采取不同管理模式管理数据:
    a. owner模式, StringT类管理数据的释放
    b. observer模式, StringT类不管理数据的释放，只是观察着数据。当需要修改数据时(调用修改数据的方法时)，自动变成owner模式

3. 采用template方式设计, StringT类可包含不同类型的数据.

4. 资源所有权可传递,传递后,自己变成observer模式.

5. owner模式的对象需要维护一个链表，存储观察自己的对象指针，当自己释放，或者传递所有权时，通知它们进行相应操作:
    a. 自己释放时, 若只有一个observer，则直接把所有权传递给它，若是多个，则通知所有observer变成owner模式
    b. 自己传递所有权时，将观察者链表拷贝给新所有者

6. observer模式的对象需要维护一个指针，存储正在观察的对象，当自己析构时，通知该正在观察的对象删除自己。

7. 对串连接操作进行优化,采取list方式管理串连接。连接时只向list添加元素，当需要获取全部数据时，才进行全部连接。

8. 对赋值操作进行优化,当对方对象为observer模式时，自己用observer模式，当对方为owner模式时，自己也用observer模式。当对方为owner模式，若对方没有观察者，对方传递所有权给自己，自己用owner模式，并把对方改为observer模式。

9. 提供Clone()方法，以“确实的”复制对象数据。即对方无论是owner还是observer，自己都复制数据成为owner。
